// src/components/fiche/sections/FicheGuideAcces.jsx
import SidebarMenu from '../SidebarMenu'
import ProgressBar from '../ProgressBar'
import NavigationButtons from '../NavigationButtons'
import { useForm } from '../../FormContext'
import { MapPin, Camera, Users } from 'lucide-react'

export default function FicheGuideAcces() {
  const { 
    getField,
    updateField
  } = useForm()

  const handleInputChange = (fieldPath, value) => {
    updateField(fieldPath, value)
  }

  const handleArrayCheckboxChange = (fieldPath, option, checked) => {
    const currentArray = getField(fieldPath) || []
    let newArray
    if (checked) {
      newArray = [...currentArray, option]
    } else {
      newArray = currentArray.filter(item => item !== option)
    }
    updateField(fieldPath, newArray)
  }

  const handleCheckboxChange = (fieldPath, checked) => {
    updateField(fieldPath, checked)
  }

  // R√©cup√©ration des donn√©es
  const formData = getField('section_guide_acces')

  // √âl√©ments √† documenter (checklist)
  const elementsDocumenter = [
    'Point de rep√®re visible depuis la rue',
    'Entr√©e de l\'immeuble ou du b√¢timent',
    'Code d\'acc√®s ou interphone',
    'Hall d\'entr√©e et orientation',
    'Ascenseur ou escalier √† emprunter',
    'Palier et num√©rotation',
    'Porte d\'appartement',
    'Bo√Æte aux lettres ou point de r√©cup√©ration des cl√©s'
  ]

  // Difficult√©s d'acc√®s possibles
  const difficultesAcces = [
    'Num√©rotation peu visible ou confuse',
    'Plusieurs entr√©es possibles',
    'Code d\'acc√®s ou badge n√©cessaire',
    'Parking ou stationnement complexe',
    'Ascenseur en panne fr√©quente',
    'Travaux ou d√©viations temporaires',
    '√âclairage insuffisant le soir',
    'Acc√®s difficile avec bagages'
  ]

  return (
    <div className="flex min-h-screen">
      <SidebarMenu />
      
      <div className="flex-1 flex flex-col">
        <ProgressBar />
        
        <div className="flex-1 p-6 bg-gray-100">
          {/* Container centr√© - OBLIGATOIRE */}
          <div className="max-w-4xl mx-auto">
            <h1 className="text-2xl font-bold mb-6 text-gray-900">Guide d'Acc√®s</h1>
            
            {/* Carte blanche principale - OBLIGATOIRE */}
            <div className="bg-white rounded-xl shadow-sm p-8">
              
              {/* Header avec ic√¥ne - OBLIGATOIRE */}
              <div className="mb-8">
                <div className="flex items-center gap-3 mb-4">
                  <div className="w-10 h-10 bg-[#dbae61] rounded-lg flex items-center justify-center">
                    <MapPin className="w-5 h-5 text-white" />
                  </div>
                  <div>
                    <h2 className="text-xl font-semibold text-gray-900">Documentation de l'Acc√®s</h2>
                    <p className="text-gray-600">Guidez efficacement vos voyageurs</p>
                  </div>
                </div>
              </div>

              {/* Contenu du formulaire */}
              <div className="space-y-8">
                
                {/* Message d'introduction avec conseils */}
                <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
                  <div className="flex items-start gap-3">
                    <Users className="w-6 h-6 text-blue-600 mt-1" />
                    <div>
                      <h3 className="font-semibold text-blue-800 mb-3">
                        Mettez-vous √† la place des voyageurs
                      </h3>
                      <p className="text-blue-700 text-sm mb-3">
                        Un guide d'acc√®s bien document√© est b√©n√©fique pour vous et utile aux voyageurs. 
                        Filmez bien chaque √©tape pour cr√©er une exp√©rience d'arriv√©e fluide.
                      </p>
                      <p className="text-blue-600 text-sm font-medium">
                        üí° Pensez aux d√©tails qui facilitent l'acc√®s au logement
                      </p>
                    </div>
                  </div>
                </div>

                {/* Point de rep√®re principal */}
                <div>
                  <label className="block font-medium text-gray-900 mb-2">
                    Point de rep√®re principal visible depuis la rue *
                  </label>
                  <input
                    type="text"
                    placeholder="Ex: Panneau de rue, caf√© 'Le Central', station de m√©tro, pharmacie..."
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                    value={formData.point_repere_principal || ''}
                    onChange={(e) => handleInputChange('section_guide_acces.point_repere_principal', e.target.value)}
                  />
                  <p className="text-sm text-gray-500 mt-1">
                    Choisissez un √©l√©ment facilement identifiable par les voyageurs
                  </p>
                </div>

                {/* Description d√©taill√©e du parcours */}
                <div>
                  <label className="block font-medium text-gray-900 mb-2">
                    Description √©tape par √©tape de l'acc√®s au logement *
                  </label>
                  <textarea
                    placeholder="D√©crivez le parcours complet depuis le point de rep√®re jusqu'√† la porte d'entr√©e : direction √† prendre, nombre de m√®tres, √©l√©ments √† rep√©rer, codes √©ventuels, √©tage, etc."
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all resize-none"
                    rows={5}
                    value={formData.description_acces || ""}
                    onChange={(e) => handleInputChange('section_guide_acces.description_acces', e.target.value)}
                  />
                </div>

                {/* √âl√©ments √† documenter (checklist) */}
                <div>
                  <label className="block font-medium text-gray-900 mb-4">
                    √âl√©ments √† photographier et filmer pour le guide d'acc√®s :
                  </label>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                    {elementsDocumenter.map(element => (
                      <label key={element} className="flex items-start gap-3 cursor-pointer p-3 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                        <input
                          type="checkbox"
                          checked={(formData.elements_documenter || []).includes(element)}
                          onChange={(e) => handleArrayCheckboxChange('section_guide_acces.elements_documenter', element, e.target.checked)}
                          className="w-4 h-4 text-[#dbae61] border-gray-300 rounded focus:ring-[#dbae61] mt-0.5"
                        />
                        <span className="text-sm text-gray-700">{element}</span>
                      </label>
                    ))}
                  </div>
                </div>

                {/* Difficult√©s d'acc√®s identifi√©es */}
                <div>
                  <label className="block font-medium text-gray-900 mb-4">
                    Difficult√©s d'acc√®s identifi√©es (√† signaler aux voyageurs) :
                  </label>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                    {difficultesAcces.map(difficulte => (
                      <label key={difficulte} className="flex items-start gap-3 cursor-pointer p-3 border border-orange-200 rounded-lg hover:bg-orange-50 transition-colors">
                        <input
                          type="checkbox"
                          checked={(formData.difficultes_acces || []).includes(difficulte)}
                          onChange={(e) => handleArrayCheckboxChange('section_guide_acces.difficultes_acces', difficulte, e.target.checked)}
                          className="w-4 h-4 text-orange-500 border-gray-300 rounded focus:ring-orange-500 mt-0.5"
                        />
                        <span className="text-sm text-gray-700">{difficulte}</span>
                      </label>
                    ))}
                  </div>
                </div>

                {/* Conseils suppl√©mentaires */}
                <div>
                  <label className="block font-medium text-gray-900 mb-2">
                    Conseils sp√©cifiques pour faciliter l'arriv√©e des voyageurs
                  </label>
                  <textarea
                    placeholder="Conseils pratiques : meilleurs horaires d'arriv√©e, contact en cas de probl√®me, alternatives en cas de panne d'ascenseur, etc."
                    className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all resize-none"
                    rows={3}
                    value={formData.conseils_voyageurs || ""}
                    onChange={(e) => handleInputChange('section_guide_acces.conseils_voyageurs', e.target.value)}
                  />
                </div>

                {/* Rappels documentation */}
                <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-6">
                  <div className="flex items-start gap-3 mb-4">
                    <Camera className="w-6 h-6 text-yellow-600 mt-1" />
                    <h3 className="font-medium text-gray-900">Documentation visuelle</h3>
                  </div>
                  
                  <div className="space-y-3">
                    <label className="flex items-center gap-2 cursor-pointer">
                      <input
                        type="checkbox"
                        checked={formData.photos_rappels?.photos_etapes_acces_taken || false}
                        onChange={(e) => handleCheckboxChange('section_guide_acces.photos_rappels.photos_etapes_acces_taken', e.target.checked)}
                        className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                      />
                      <span className="text-sm text-yellow-800">
                        üì∏ Photos √©tape par √©tape r√©alis√©es (carrousel d'acc√®s)
                      </span>
                    </label>
                    
                    <label className="flex items-center gap-2 cursor-pointer">
                      <input
                        type="checkbox"
                        checked={formData.photos_rappels?.video_acces_taken || false}
                        onChange={(e) => handleCheckboxChange('section_guide_acces.photos_rappels.video_acces_taken', e.target.checked)}
                        className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                      />
                      <span className="text-sm text-yellow-800">
                        üé• Vid√©o continue d'acc√®s r√©alis√©e (du rep√®re √† la porte)
                      </span>
                    </label>
                  </div>
                </div>

              </div>

              {/* Boutons navigation standardis√©s - OBLIGATOIRE */}
              <NavigationButtons />
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}