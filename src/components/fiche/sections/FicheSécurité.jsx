// src/components/fiche/sections/FicheS√©curit√©.jsx
import SidebarMenu from '../SidebarMenu'
import ProgressBar from '../ProgressBar'
import NavigationButtons from '../NavigationButtons'
import { useForm } from '../../FormContext'
import { Shield } from 'lucide-react'

export default function FicheS√©curit√©() {
  const { 
    getField,
    updateField
  } = useForm()

  const handleInputChange = (fieldPath, value) => {
    updateField(fieldPath, value)
  }

  const handleCheckboxChange = (fieldPath, checked) => {
    updateField(fieldPath, checked)
  }

  const handleArrayCheckboxChange = (fieldPath, option, checked) => {
    const currentArray = getField(fieldPath) || []
    let newArray
    if (checked) {
      newArray = [...currentArray, option]
    } else {
      newArray = currentArray.filter(item => item !== option)
      
      // Nettoyage automatique des champs li√©s
      if (option === 'Syst√®me d\'alarme') {
        updateField('section_securite.alarme_desarmement', '')
      }
      if (option === 'Autre (veuillez pr√©ciser)') {
        updateField('section_securite.equipements_autre_details', '')
      }
    }
    updateField(fieldPath, newArray)
  }

  // R√©cup√©ration des donn√©es
  const formData_section = getField('section_securite')

  // Liste des √©quipements de s√©curit√©
  const equipementsSecurite = [
    'D√©tecteur de fum√©e',
    'D√©tecteur de monoxyde de carbone',
    'Extincteur',
    'Trousse de premiers secours',
    'Verrou de s√©curit√© sur la porte d\'entr√©e',
    'Syst√®me d\'alarme',
    'Cam√©ras de surveillance ext√©rieures',
    'Cam√©ras de surveillance int√©rieures (uniquement dans les espaces communs)',
    'Autre (veuillez pr√©ciser)'
  ]

  // D√©terminer quels √©quipements sont coch√©s
  const equipementsCoches = formData_section.equipements || []
  const systemeAlarmeSelected = equipementsCoches.includes('Syst√®me d\'alarme')
  const autreSelected = equipementsCoches.includes('Autre (veuillez pr√©ciser)')

  return (
    <div className="flex min-h-screen">
      <SidebarMenu />
      
      <div className="flex-1 flex flex-col">
        <ProgressBar />
        
        <div className="flex-1 p-6 bg-gray-100">
          <div className="max-w-4xl mx-auto">
            <h1 className="text-2xl font-bold mb-6 text-gray-900">S√©curit√©</h1>
            
            <div className="bg-white rounded-xl shadow-sm p-8">
              
              {/* Header avec ic√¥ne */}
              <div className="mb-8">
                <div className="flex items-center gap-3 mb-4">
                  <div className="w-10 h-10 bg-[#dbae61] rounded-lg flex items-center justify-center">
                    <Shield className="w-5 h-5 text-white" />
                  </div>
                  <div>
                    <h2 className="text-xl font-semibold text-gray-900">√âquipements de s√©curit√©</h2>
                    <p className="text-gray-600">V√©rifiez la pr√©sence des √©quipements de s√©curit√© obligatoires</p>
                  </div>
                </div>
              </div>

              {/* Formulaire s√©curit√© */}
              <div className="space-y-6">
                <div>
                  <label className="block font-medium text-gray-900 mb-4">
                    √âquipements de s√©curit√© pr√©sents *
                  </label>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                    {equipementsSecurite.map((equipement) => (
                      <label key={equipement} className="flex items-center space-x-3 p-3 rounded-lg border border-gray-200 hover:bg-gray-50 cursor-pointer">
                        <input
                          type="checkbox"
                          checked={equipementsCoches.includes(equipement)}
                          onChange={(e) => handleArrayCheckboxChange('section_securite.equipements', equipement, e.target.checked)}
                          className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                        />
                        <span className="text-sm text-gray-700">{equipement}</span>
                      </label>
                    ))}
                  </div>
                </div>

                {/* Champ conditionnel - Syst√®me d'alarme */}
                {systemeAlarmeSelected && (
                  <div>
                    <label className="block font-medium text-gray-900 mb-2">
                      Instructions pour d√©sarmer l'alarme
                    </label>
                    <textarea
                      placeholder="Expliquez comment d√©sarmer le syst√®me d'alarme..."
                      value={getField('section_securite.alarme_desarmement') || ''}
                      onChange={(e) => handleInputChange('section_securite.alarme_desarmement', e.target.value)}
                      className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                      rows={3}
                    />
                  </div>
                )}

                {/* Champ conditionnel - Autre √©quipement */}
                {autreSelected && (
                  <div>
                    <label className="block font-medium text-gray-900 mb-2">
                      Pr√©cisez les autres √©quipements
                    </label>
                    <input
                      type="text"
                      placeholder="D√©crivez les autres √©quipements de s√©curit√©..."
                      value={getField('section_securite.equipements_autre_details') || ''}
                      onChange={(e) => handleInputChange('section_securite.equipements_autre_details', e.target.value)}
                      className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                    />
                  </div>
                )}

                {/* Rappels photos */}
                {equipementsCoches.length > 0 && (
                  <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                    <div className="flex items-center space-x-3">
                      <input
                        id="photos_equipements_securite_taken"
                        type="checkbox"
                        checked={getField('section_securite.photos_rappels.photos_equipements_securite_taken') || false}
                        onChange={(e) => handleCheckboxChange('section_securite.photos_rappels.photos_equipements_securite_taken', e.target.checked)}
                        className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                      />
                      <label htmlFor="photos_equipements_securite_taken" className="text-sm text-yellow-800">
                        üì∏ Pensez √† prendre des photos de tous les √©quipements de s√©curit√©
                      </label>
                    </div>
                  </div>
                )}
              </div>

              {/* NavigationButtons standard */}
              <NavigationButtons />
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}