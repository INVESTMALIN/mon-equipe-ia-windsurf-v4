// src/components/fiche/sections/FicheCuisine1.jsx
import SidebarMenu from '../SidebarMenu'
import ProgressBar from '../ProgressBar'
import NavigationButtons from '../NavigationButtons'
import { useForm } from '../../FormContext'
import { ChefHat } from 'lucide-react'

export default function FicheCuisine1() {
  const { 
    getField,
    updateField
  } = useForm()

  // R√©cup√©ration des donn√©es de la section
  const formData = getField('section_cuisine_1')

  // Handler pour champs simples
  const handleInputChange = (field, value) => {
    updateField(field, value)
  }

  // Handler pour checkboxes (√©quipements principaux et types cafeti√®re)
  const handleCheckboxChange = (field, checked) => {
    updateField(field, checked ? true : null)
  }

  // Handler pour radio buttons
  const handleRadioChange = (field, value) => {
    updateField(field, value)
  }

  // Liste des √©quipements principaux
  const equipements = [
    { key: 'equipements_refrigerateur', label: 'R√©frig√©rateur' },
    { key: 'equipements_congelateur', label: 'Cong√©lateur' },
    { key: 'equipements_mini_refrigerateur', label: 'Mini r√©frig√©rateur' },
    { key: 'equipements_cuisiniere', label: 'Cuisini√®re' },
    { key: 'equipements_plaque_cuisson', label: 'Plaque de cuisson' },
    { key: 'equipements_four', label: 'Four' },
    { key: 'equipements_micro_ondes', label: 'Four √† micro-ondes' },
    { key: 'equipements_lave_vaisselle', label: 'Lave-vaisselle' },
    { key: 'equipements_cafetiere', label: 'Cafeti√®re' },
    { key: 'equipements_bouilloire', label: 'Bouilloire √©lectrique' },
    { key: 'equipements_grille_pain', label: 'Grille-pain' },
    { key: 'equipements_blender', label: 'Blender' },
    { key: 'equipements_cuiseur_riz', label: 'Cuiseur √† riz' },
    { key: 'equipements_machine_pain', label: 'Machine √† pain' },
    { key: 'equipements_lave_linge', label: 'Lave-linge' },
    { key: 'equipements_autre', label: 'Autre (veuillez pr√©ciser)' }
  ]

  // Types de cafeti√®re
  const typesCafetiere = [
    { key: 'cafetiere_type_filtre', label: 'Cafeti√®re filtre' },
    { key: 'cafetiere_type_expresso', label: 'Machine √† expresso' },
    { key: 'cafetiere_type_piston', label: 'Cafeti√®re √† piston' },
    { key: 'cafetiere_type_keurig', label: 'Machine √† caf√© Keurig' },
    { key: 'cafetiere_type_nespresso', label: 'Nespresso' },
    { key: 'cafetiere_type_manuelle', label: 'Cafeti√®re manuelle' },
    { key: 'cafetiere_type_bar_grain', label: 'Cafeti√®re bar grain (type Delonghi)' },
    { key: 'cafetiere_type_bar_moulu', label: 'Cafeti√®re bar caf√© moulu (type Delonghi)' }
  ]

  return (
    <div className="flex min-h-screen">
      <SidebarMenu />
      
      <div className="flex-1 flex flex-col">
        <ProgressBar />
        
        <div className="flex-1 p-6 bg-gray-100">
          {/* Container centr√© */}
          <div className="max-w-4xl mx-auto">
            <h1 className="text-2xl font-bold mb-6 text-gray-900">Cuisine 1 - √âquipements</h1>
            
            <div className="bg-white rounded-xl shadow-sm p-8">
              <div className="mb-8">
                <div className="flex items-center gap-3 mb-4">
                  <div className="w-10 h-10 bg-[#dbae61] rounded-lg flex items-center justify-center">
                    <ChefHat className="w-5 h-5 text-white" />
                  </div>
                  <div>
                    <h2 className="text-xl font-semibold text-gray-900">√âquipements de cuisine</h2>
                    <p className="text-gray-600">Configuration des appareils √©lectrom√©nagers et √©quipements</p>
                  </div>
                </div>
              </div>

              <div className="space-y-8">
                
                {/* Section principale : S√©lection des √©quipements */}
                <div>
                  <label className="block font-medium text-gray-900 mb-3">
                    Quels √©quipements √©lectrom√©nagers sont disponibles dans la cuisine ? <span className="text-red-500">*</span>
                  </label>
                  
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                    {equipements.map(({ key, label }) => (
                      <label key={key} className="flex items-center gap-3 cursor-pointer hover:bg-gray-50 p-3 rounded-lg border border-gray-200">
                        <input
                          type="checkbox"
                          checked={formData[key] === true}
                          onChange={(e) => handleCheckboxChange(`section_cuisine_1.${key}`, e.target.checked)}
                          className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                        />
                        <span className="text-sm font-medium">{label}</span>
                      </label>
                    ))}
                  </div>

                  {/* Champ conditionnel "Autre" */}
                  {formData.equipements_autre === true && (
                    <div className="mt-4">
                      <input
                        type="text"
                        placeholder="Veuillez pr√©ciser..."
                        value={formData.equipements_autre_details || ""}
                        onChange={(e) => handleInputChange('section_cuisine_1.equipements_autre_details', e.target.value)}
                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                      />
                    </div>
                  )}
                </div>

                {/* R√âFRIG√âRATEUR */}
                {formData.equipements_refrigerateur === true && (
                  <div className="p-6 bg-blue-50 border border-blue-200 rounded-lg space-y-4">
                    <h3 className="font-semibold text-blue-800">R√©frig√©rateur - D√©tails</h3>
                    
                    <div>
                      <label className="block font-medium text-gray-900 mb-2">
                        Marque <span className="text-red-500">*</span>
                      </label>
                      <input
                        type="text"
                        placeholder="Pr√©cisez la marque du r√©frig√©rateur"
                        value={formData.refrigerateur_marque || ""}
                        onChange={(e) => handleInputChange('section_cuisine_1.refrigerateur_marque', e.target.value)}
                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                      />
                    </div>

                    <div>
                      <label className="block font-medium text-gray-900 mb-2">
                        Instructions d'utilisation
                      </label>
                      <textarea
                        placeholder="Instructions d'utilisation du r√©frig√©rateur"
                        value={formData.refrigerateur_instructions || ""}
                        onChange={(e) => handleInputChange('section_cuisine_1.refrigerateur_instructions', e.target.value)}
                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all h-24"
                      />
                    </div>

                    {/* Rappel photo VERSION LITE */}
                    <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                      <div className="flex items-center gap-2">
                        <input
                          type="checkbox"
                          id="refrigerateur_taken"
                          checked={formData.photos_rappels?.refrigerateur_taken || false}
                          onChange={(e) => handleInputChange('section_cuisine_1.photos_rappels.refrigerateur_taken', e.target.checked)}
                          className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                        />
                        <label htmlFor="refrigerateur_taken" className="text-sm text-yellow-800">
                          üì∏ Pensez √† prendre une vid√©o d'utilisation du r√©frig√©rateur
                        </label>
                      </div>
                    </div>
                  </div>
                )}

                {/* CONG√âLATEUR */}
                {formData.equipements_congelateur === true && (
                  <div className="p-6 bg-blue-50 border border-blue-200 rounded-lg space-y-4">
                    <h3 className="font-semibold text-blue-800">Cong√©lateur - D√©tails</h3>
                    
                    <div>
                      <label className="block font-medium text-gray-900 mb-2">
                        Instructions d'utilisation
                      </label>
                      <textarea
                        placeholder="Instructions d'utilisation du cong√©lateur"
                        value={formData.congelateur_instructions || ""}
                        onChange={(e) => handleInputChange('section_cuisine_1.congelateur_instructions', e.target.value)}
                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all h-24"
                      />
                    </div>

                    <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                      <div className="flex items-center gap-2">
                        <input
                          type="checkbox"
                          id="congelateur_taken"
                          checked={formData.photos_rappels?.congelateur_taken || false}
                          onChange={(e) => handleInputChange('section_cuisine_1.photos_rappels.congelateur_taken', e.target.checked)}
                          className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                        />
                        <label htmlFor="congelateur_taken" className="text-sm text-yellow-800">
                          üì∏ Pensez √† prendre une vid√©o d'utilisation du cong√©lateur
                        </label>
                      </div>
                    </div>
                  </div>
                )}

                {/* MINI R√âFRIG√âRATEUR */}
                {formData.equipements_mini_refrigerateur === true && (
                  <div className="p-6 bg-blue-50 border border-blue-200 rounded-lg space-y-4">
                    <h3 className="font-semibold text-blue-800">Mini r√©frig√©rateur - D√©tails</h3>
                    
                    <div>
                      <label className="block font-medium text-gray-900 mb-2">
                        Instructions d'utilisation
                      </label>
                      <textarea
                        placeholder="Instructions d'utilisation du mini r√©frig√©rateur"
                        value={formData.mini_refrigerateur_instructions || ""}
                        onChange={(e) => handleInputChange('section_cuisine_1.mini_refrigerateur_instructions', e.target.value)}
                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all h-24"
                      />
                    </div>

                    <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                      <div className="flex items-center gap-2">
                        <input
                          type="checkbox"
                          id="mini_refrigerateur_taken"
                          checked={formData.photos_rappels?.mini_refrigerateur_taken || false}
                          onChange={(e) => handleInputChange('section_cuisine_1.photos_rappels.mini_refrigerateur_taken', e.target.checked)}
                          className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                        />
                        <label htmlFor="mini_refrigerateur_taken" className="text-sm text-yellow-800">
                          üì∏ Pensez √† prendre une vid√©o d'utilisation du mini r√©frig√©rateur
                        </label>
                      </div>
                    </div>
                  </div>
                )}

                {/* CUISINI√àRE */}
                {formData.equipements_cuisiniere === true && (
                  <div className="p-6 bg-blue-50 border border-blue-200 rounded-lg space-y-4">
                    <h3 className="font-semibold text-blue-800">Cuisini√®re - D√©tails</h3>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div>
                        <label className="block font-medium text-gray-900 mb-2">
                          Marque <span className="text-red-500">*</span>
                        </label>
                        <input
                          type="text"
                          placeholder="Pr√©cisez la marque"
                          value={formData.cuisiniere_marque || ""}
                          onChange={(e) => handleInputChange('section_cuisine_1.cuisiniere_marque', e.target.value)}
                          className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                        />
                      </div>

                      <div>
                        <label className="block font-medium text-gray-900 mb-2">
                          Type
                        </label>
                        <select
                          value={formData.cuisiniere_type || ""}
                          onChange={(e) => handleInputChange('section_cuisine_1.cuisiniere_type', e.target.value)}
                          className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                        >
                          <option value="">S√©lectionnez le type</option>
                          <option value="√âlectrique">√âlectrique</option>
                          <option value="Gaz">Gaz</option>
                          <option value="Induction">Induction</option>
                          <option value="√Ä bois">√Ä bois</option>
                        </select>
                      </div>
                    </div>

                    <div>
                      <label className="block font-medium text-gray-900 mb-2">
                        Nombre de feux
                      </label>
                      <input
                        type="number"
                        placeholder="Indiquez le nombre de feux"
                        value={formData.cuisiniere_nombre_feux || ""}
                        onChange={(e) => handleInputChange('section_cuisine_1.cuisiniere_nombre_feux', e.target.value)}
                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                      />
                    </div>

                    <div>
                      <label className="block font-medium text-gray-900 mb-2">
                        Instructions d'utilisation
                      </label>
                      <textarea
                        placeholder="Instructions d'utilisation de la cuisini√®re"
                        value={formData.cuisiniere_instructions || ""}
                        onChange={(e) => handleInputChange('section_cuisine_1.cuisiniere_instructions', e.target.value)}
                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all h-24"
                      />
                    </div>

                    <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                      <div className="flex items-center gap-2">
                        <input
                          type="checkbox"
                          id="cuisiniere_taken"
                          checked={formData.photos_rappels?.cuisiniere_taken || false}
                          onChange={(e) => handleInputChange('section_cuisine_1.photos_rappels.cuisiniere_taken', e.target.checked)}
                          className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                        />
                        <label htmlFor="cuisiniere_taken" className="text-sm text-yellow-800">
                          üì∏ Pensez √† prendre des photos et vid√©os d'utilisation de la cuisini√®re
                        </label>
                      </div>
                    </div>
                  </div>
                )}

                {/* CAFETI√àRE (section complexe) */}
                {formData.equipements_cafetiere === true && (
                  <div className="p-6 bg-blue-50 border border-blue-200 rounded-lg space-y-6">
                    <h3 className="font-semibold text-blue-800">Cafeti√®re - D√©tails</h3>
                    
                    <div>
                      <label className="block font-medium text-gray-900 mb-2">
                        Marque <span className="text-red-500">*</span>
                      </label>
                      <input
                        type="text"
                        placeholder="Pr√©cisez la marque de la cafeti√®re"
                        value={formData.cafetiere_marque || ""}
                        onChange={(e) => handleInputChange('section_cuisine_1.cafetiere_marque', e.target.value)}
                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                      />
                    </div>

                    <div>
                      <label className="block font-medium text-gray-900 mb-3">
                        Type de cafeti√®re
                      </label>
                      <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                        {typesCafetiere.map(({ key, label }) => (
                          <label key={key} className="flex items-center gap-3 cursor-pointer hover:bg-gray-50 p-2 rounded">
                            <input
                              type="checkbox"
                              checked={formData[key] === true}
                              onChange={(e) => handleCheckboxChange(`section_cuisine_1.${key}`, e.target.checked)}
                              className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                            />
                            <span className="text-sm">{label}</span>
                          </label>
                        ))}
                      </div>
                    </div>

                    <div>
                      <label className="block font-medium text-gray-900 mb-2">
                        Instructions d'utilisation
                      </label>
                      <textarea
                        placeholder="Instructions d'utilisation de la cafeti√®re"
                        value={formData.cafetiere_instructions || ""}
                        onChange={(e) => handleInputChange('section_cuisine_1.cafetiere_instructions', e.target.value)}
                        className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all h-24"
                      />
                    </div>

                    <div>
                      <label className="block font-medium text-gray-900 mb-3">
                        Le caf√© est-il fourni ?
                      </label>
                      <div className="flex flex-wrap gap-4">
                        <label className="flex items-center gap-2 cursor-pointer">
                          <input
                            type="radio"
                            name="cafetiere_cafe_fourni"
                            value="Non"
                            checked={formData.cafetiere_cafe_fourni === "Non"}
                            onChange={(e) => handleRadioChange('section_cuisine_1.cafetiere_cafe_fourni', e.target.value)}
                            className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61]"
                          />
                          <span>Non</span>
                        </label>
                        <label className="flex items-center gap-2 cursor-pointer">
                          <input
                            type="radio"
                            name="cafetiere_cafe_fourni"
                            value="Oui par le propri√©taire"
                            checked={formData.cafetiere_cafe_fourni === "Oui par le propri√©taire"}
                            onChange={(e) => handleRadioChange('section_cuisine_1.cafetiere_cafe_fourni', e.target.value)}
                            className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61]"
                          />
                          <span>Oui par le propri√©taire</span>
                        </label>
                        <label className="flex items-center gap-2 cursor-pointer">
                          <input
                            type="radio"
                            name="cafetiere_cafe_fourni"
                            value="Oui par la femme de m√©nage"
                            checked={formData.cafetiere_cafe_fourni === "Oui par la femme de m√©nage"}
                            onChange={(e) => handleRadioChange('section_cuisine_1.cafetiere_cafe_fourni', e.target.value)}
                            className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61]"
                          />
                          <span>Oui par la femme de m√©nage</span>
                        </label>
                      </div>
                    </div>

                    {/* Champ conditionnel marque du caf√© */}
                    {(formData.cafetiere_cafe_fourni === "Oui par le propri√©taire" || formData.cafetiere_cafe_fourni === "Oui par la femme de m√©nage") && (
                      <div>
                        <label className="block font-medium text-gray-900 mb-2">
                          Marque du caf√© fourni
                        </label>
                        <input
                          type="text"
                          placeholder="Pr√©cisez la marque du caf√© fourni"
                          value={formData.cafetiere_marque_cafe || ""}
                          onChange={(e) => handleInputChange('section_cuisine_1.cafetiere_marque_cafe', e.target.value)}
                          className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                        />
                      </div>
                    )}

                    <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                      <div className="flex items-center gap-2">
                        <input
                          type="checkbox"
                          id="cafetiere_taken"
                          checked={formData.photos_rappels?.cafetiere_taken || false}
                          onChange={(e) => handleInputChange('section_cuisine_1.photos_rappels.cafetiere_taken', e.target.checked)}
                          className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                        />
                        <label htmlFor="cafetiere_taken" className="text-sm text-yellow-800">
                          üì∏ Pensez √† prendre des photos et vid√©os d'utilisation de la cafeti√®re
                        </label>
                      </div>
                    </div>
                  </div>
                )}

                {/* Autres √©quipements simplifi√©s */}
                {[
                  { key: 'plaque_cuisson', label: 'Plaque de cuisson', hasDetails: true },
                  { key: 'four', label: 'Four', hasDetails: true },
                  { key: 'micro_ondes', label: 'Four √† micro-ondes', hasDetails: false },
                  { key: 'lave_vaisselle', label: 'Lave-vaisselle', hasDetails: false },
                  { key: 'bouilloire', label: 'Bouilloire √©lectrique', hasDetails: false },
                  { key: 'grille_pain', label: 'Grille-pain', hasDetails: false },
                  { key: 'blender', label: 'Blender', hasDetails: false },
                  { key: 'cuiseur_riz', label: 'Cuiseur √† riz', hasDetails: false },
                  { key: 'machine_pain', label: 'Machine √† pain', hasDetails: false }
                ].map(({ key, label, hasDetails }) => (
                  formData[`equipements_${key}`] === true && (
                    <div key={key} className="p-6 bg-blue-50 border border-blue-200 rounded-lg space-y-4">
                      <h3 className="font-semibold text-blue-800">{label} - D√©tails</h3>
                      
                      {hasDetails && key === 'plaque_cuisson' && (
                        <>
                          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                            <div>
                              <label className="block font-medium text-gray-900 mb-2">
                                Marque <span className="text-red-500">*</span>
                              </label>
                              <input
                                type="text"
                                placeholder="Marque"
                                value={formData.plaque_cuisson_marque || ""}
                                onChange={(e) => handleInputChange('section_cuisine_1.plaque_cuisson_marque', e.target.value)}
                                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                              />
                            </div>
                            <div>
                              <label className="block font-medium text-gray-900 mb-2">Type</label>
                              <select
                                value={formData.plaque_cuisson_type || ""}
                                onChange={(e) => handleInputChange('section_cuisine_1.plaque_cuisson_type', e.target.value)}
                                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                              >
                                <option value="">Type</option>
                                <option value="√âlectrique">√âlectrique</option>
                                <option value="Gaz">Gaz</option>
                                <option value="Induction">Induction</option>
                              </select>
                            </div>
                            <div>
                              <label className="block font-medium text-gray-900 mb-2">Nombre de feux</label>
                              <input
                                type="number"
                                placeholder="Nb feux"
                                value={formData.plaque_cuisson_nombre_feux || ""}
                                onChange={(e) => handleInputChange('section_cuisine_1.plaque_cuisson_nombre_feux', e.target.value)}
                                className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                              />
                            </div>
                          </div>
                        </>
                      )}

                      {hasDetails && key === 'four' && (
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                          <div>
                            <label className="block font-medium text-gray-900 mb-2">
                              Marque <span className="text-red-500">*</span>
                            </label>
                            <input
                              type="text"
                              placeholder="Marque du four"
                              value={formData.four_marque || ""}
                              onChange={(e) => handleInputChange('section_cuisine_1.four_marque', e.target.value)}
                              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                            />
                          </div>
                          <div>
                            <label className="block font-medium text-gray-900 mb-2">Type</label>
                            <select
                              value={formData.four_type || ""}
                              onChange={(e) => handleInputChange('section_cuisine_1.four_type', e.target.value)}
                              className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all"
                            >
                              <option value="">S√©lectionnez le type</option>
                              <option value="Simple">Simple</option>
                              <option value="Double">Double</option>
                            </select>
                          </div>
                        </div>
                      )}

                      <div>
                        <label className="block font-medium text-gray-900 mb-2">
                          Instructions d'utilisation
                        </label>
                        <textarea
                          placeholder={`Instructions d'utilisation ${label.toLowerCase()}`}
                          value={formData[`${key}_instructions`] || ""}
                          onChange={(e) => handleInputChange(`section_cuisine_1.${key}_instructions`, e.target.value)}
                          className="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-[#dbae61] focus:border-transparent transition-all h-24"
                        />
                      </div>

                      <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                        <div className="flex items-center gap-2">
                          <input
                            type="checkbox"
                            id={`${key}_taken`}
                            checked={formData.photos_rappels?.[`${key}_taken`] || false}
                            onChange={(e) => handleInputChange(`section_cuisine_1.photos_rappels.${key}_taken`, e.target.checked)}
                            className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                          />
                          <label htmlFor={`${key}_taken`} className="text-sm text-yellow-800">
                            üì∏ Pensez √† prendre des photos et vid√©os d'utilisation du {label.toLowerCase()}
                          </label>
                        </div>
                      </div>
                    </div>
                  )
                ))}

                {/* √âl√©ments ab√Æm√©s */}
                <div>
                  <label className="block font-medium text-gray-900 mb-3">
                    Photos de tous les √©l√©ments ab√Æm√©s, cass√©s ou d√©t√©rior√©s dans la cuisine
                  </label>
                  <p className="text-sm text-gray-600 mb-4">
                    Traces d'usures, t√¢ches, joints color√©s, joints d√©coll√©s, meubles ab√Æm√©s, t√¢ches sur les tissus, 
                    t√¢ches sur les murs, trous, absence de cache prise, absence de lustre, rayures, 
                    traces dans √©lectrom√©nagers, traces dans les po√™les/casseroles, etc.
                  </p>
                  
                  <div className="flex gap-6">
                    <label className="flex items-center gap-2 cursor-pointer">
                      <input
                        type="radio"
                        name="cuisine_elements_abimes"
                        value="true"
                        checked={formData.elements_abimes === true}
                        onChange={() => handleInputChange('section_cuisine_1.elements_abimes', true)}
                        className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61]"
                      />
                      <span>Oui</span>
                    </label>
                    
                    <label className="flex items-center gap-2 cursor-pointer">
                      <input
                        type="radio"
                        name="cuisine_elements_abimes"
                        value="false"
                        checked={formData.elements_abimes === false}
                        onChange={() => {
                          handleInputChange('section_cuisine_1.elements_abimes', false)
                          handleInputChange('section_cuisine_1.photos_rappels.elements_abimes_taken', false)
                        }}
                        className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61]"
                      />
                      <span>Non</span>
                    </label>
                  </div>
                  
                  {/* Rappel conditionnel √©l√©ments ab√Æm√©s (VERSION LITE) */}
                  {formData.elements_abimes === true && (
                    <div className="mt-4 p-4 bg-yellow-50 border border-yellow-200 rounded-lg">
                      <div className="flex items-center gap-2">
                        <input
                          type="checkbox"
                          id="elements_abimes_taken"
                          checked={formData.photos_rappels?.elements_abimes_taken || false}
                          onChange={(e) => handleInputChange('section_cuisine_1.photos_rappels.elements_abimes_taken', e.target.checked)}
                          className="h-4 w-4 text-[#dbae61] focus:ring-[#dbae61] rounded"
                        />
                        <label htmlFor="elements_abimes_taken" className="text-sm text-yellow-800">
                          üì∏ Pensez √† prendre des photos des √©l√©ments ab√Æm√©s de la cuisine
                        </label>
                      </div>
                    </div>
                  )}
                </div>

              </div>
              
              <NavigationButtons />
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}